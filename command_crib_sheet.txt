GenAI Project Command Crib Sheet
================================

This reference collects the key commands used while debugging and fixing the GenAI upload flow.

Git Commands
------------
- `git status --short` — quick view of modified/untracked files.
- `git diff <path>` — inspect local edits.
- `git add src/upload_presign.py index.html` — stage upload flow changes.
- `git add template.yaml packaged.yaml` — stage infrastructure updates.
- `git commit -m "Presign PUT with content type"` — record upload fix.
- `git commit -m "Grant ingest bucket list permission"` — record IAM fix.
- `git log -1 --stat` — confirm latest commit contents.
- `git push origin main` — publish commits to remote.

PowerShell Helpers
------------------
- `Get-Content -Path 'src\upload_presign.py'` — view Lambda source locally.
- `Get-Content src\upload_presign.py | Select-Object -First 20` — preview top of file.
- `(Get-Content src\upload_presign.py).Count` — line count sanity check.
- `rg "GenerateUploadURL" -n` — locate endpoint strings.
- `Remove-Item upload_presign.zip` — clean temp package.

AWS CLI Commands
----------------
- `aws lambda get-function --function-name GenerateUploadURL --query "Configuration.Role" --output text`
- `aws lambda get-function --function-name GenerateUploadURL --query 'Configuration.Handler' --output text`
- `aws lambda update-function-code --function-name GenerateUploadURL --zip-file fileb://upload_presign.zip`
- `aws lambda publish-version --function-name GenerateUploadURL`
- `aws lambda update-alias --function-name GenerateUploadURL --name <alias> --function-version <version>`
- `aws logs tail /aws/lambda/GenerateUploadURL --since 5m --format short`
- `aws logs tail /aws/lambda/SummariseTranslateFn --since 10m --format short`
- `aws s3 cp s3://genai-out-use1-x7p5f0/errors/<file>.error.json -`
- `aws iam put-role-policy --role-name GenerateUploadURL-role-ljvaduuz --policy-name AllowGenAIIngestPut --policy-document '{...}'`
- `aws iam put-role-policy --role-name s3-bedrock-translate-role-genai-sumtrans --policy-name AllowIngestList --policy-document '{...}'`
- `aws cloudformation package --template-file template.yaml --s3-bucket <bucket> --output-template-file packaged.yaml --region us-east-1`
- `aws cloudformation deploy --template-file packaged.yaml --stack-name genai-sumtrans --capabilities CAPABILITY_NAMED_IAM --parameter-overrides IngestBucketName=… OutputBucketName=… TargetLanguage=… ModelId=… --region us-east-1`

Examples
--------
- **Redeploy upload Lambda**
  1. `Compress-Archive -Path src\upload_presign.py -DestinationPath upload_presign.zip -Force`
  2. `aws lambda update-function-code --function-name GenerateUploadURL --zip-file fileb://upload_presign.zip`
- **Manual presigned PUT test**
  1. `Invoke-WebRequest -Uri "<presign-endpoint>?filename=test.txt&contentType=text/plain"`
  2. `Invoke-WebRequest -Uri "<presigned-url>" -Method Put -InFile "C:\path\to\test.txt" -ContentType "text/plain"`
- **Inspect processing errors**
  1. `aws s3 cp s3://genai-out-use1-x7p5f0/errors/<name>.error.json -`
  2. `aws logs tail /aws/lambda/SummariseTranslateFn --since 10m --format short`
- **Deploy full stack via PowerShell**
  1. `.\deploy-genai.ps1 -Region us-east-1 -ArtifactsBucket cfn-artifacts-use1-x7p5f0 -StackName genai-sumtrans -IngestBucket genai-in-use1-x7p5f0 -OutputBucket genai-out-use1-x7p5f0 -TargetLang fr -ModelId amazon.titan-text-lite-v1`
  2. (Optional) `.\deploy-genai2.ps1 -ForceRedeploy -VerboseAWS`
- **Deploy full stack via raw CLI**
  1. `aws cloudformation package --template-file template.yaml --s3-bucket cfn-artifacts-use1-x7p5f0 --output-template-file packaged.yaml --region us-east-1`
  2. `aws cloudformation deploy --template-file packaged.yaml --stack-name genai-sumtrans --capabilities CAPABILITY_NAMED_IAM --parameter-overrides IngestBucketName=genai-in-use1-x7p5f0 OutputBucketName=genai-out-use1-x7p5f0 TargetLanguage=fr ModelId=amazon.titan-text-lite-v1 --region us-east-1`

Notes
-----
- Replace placeholders (e.g., `<alias>`, `<bucket>`, `<presigned-url>`) with real values.
- Remember to redeploy the CloudFormation stack after editing IAM permissions in `template.yaml`.
- `template.yaml` is the authored SAM/CloudFormation template; `aws cloudformation package` produces `packaged.yaml` with artifact S3 URIs; both PowerShell scripts wrap that package/deploy sequence.
